/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FlightAndMentenanceImport } from './routes/flightAndMentenance'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as FlightAndMentenanceIndexImport } from './routes/flightAndMentenance/index'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as FlightAndMentenanceRegistMentenanceImport } from './routes/flightAndMentenance/registMentenance'
import { Route as FlightAndMentenanceRegistFlightImport } from './routes/flightAndMentenance/registFlight'
import { Route as FlightAndMentenanceMentenanceViewImport } from './routes/flightAndMentenance/mentenanceView'
import { Route as FlightAndMentenanceFlightViewImport } from './routes/flightAndMentenance/flightView'
import { Route as DashboardUsersImport } from './routes/dashboard/users'
import { Route as DashboardInvoicesImport } from './routes/dashboard/invoices'
import { Route as DashboardUsersIndexImport } from './routes/dashboard/users/index'
import { Route as DashboardInvoicesIndexImport } from './routes/dashboard/invoices/index'
import { Route as DashboardUsersUserImport } from './routes/dashboard/users/user'
import { Route as DashboardInvoicesInvoiceIdImport } from './routes/dashboard/invoices/$invoiceId'

// Create/Update Routes

const FlightAndMentenanceRoute = FlightAndMentenanceImport.update({
  path: '/flightAndMentenance',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const FlightAndMentenanceIndexRoute = FlightAndMentenanceIndexImport.update({
  path: '/',
  getParentRoute: () => FlightAndMentenanceRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const FlightAndMentenanceRegistMentenanceRoute =
  FlightAndMentenanceRegistMentenanceImport.update({
    path: '/registMentenance',
    getParentRoute: () => FlightAndMentenanceRoute,
  } as any)

const FlightAndMentenanceRegistFlightRoute =
  FlightAndMentenanceRegistFlightImport.update({
    path: '/registFlight',
    getParentRoute: () => FlightAndMentenanceRoute,
  } as any)

const FlightAndMentenanceMentenanceViewRoute =
  FlightAndMentenanceMentenanceViewImport.update({
    path: '/mentenanceView',
    getParentRoute: () => FlightAndMentenanceRoute,
  } as any)

const FlightAndMentenanceFlightViewRoute =
  FlightAndMentenanceFlightViewImport.update({
    path: '/flightView',
    getParentRoute: () => FlightAndMentenanceRoute,
  } as any)

const DashboardUsersRoute = DashboardUsersImport.update({
  path: '/users',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardInvoicesRoute = DashboardInvoicesImport.update({
  path: '/invoices',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUsersIndexRoute = DashboardUsersIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardUsersRoute,
} as any)

const DashboardInvoicesIndexRoute = DashboardInvoicesIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardInvoicesRoute,
} as any)

const DashboardUsersUserRoute = DashboardUsersUserImport.update({
  path: '/user',
  getParentRoute: () => DashboardUsersRoute,
} as any)

const DashboardInvoicesInvoiceIdRoute = DashboardInvoicesInvoiceIdImport.update(
  {
    path: '/$invoiceId',
    getParentRoute: () => DashboardInvoicesRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/flightAndMentenance': {
      preLoaderRoute: typeof FlightAndMentenanceImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/invoices': {
      preLoaderRoute: typeof DashboardInvoicesImport
      parentRoute: typeof DashboardImport
    }
    '/dashboard/users': {
      preLoaderRoute: typeof DashboardUsersImport
      parentRoute: typeof DashboardImport
    }
    '/flightAndMentenance/flightView': {
      preLoaderRoute: typeof FlightAndMentenanceFlightViewImport
      parentRoute: typeof FlightAndMentenanceImport
    }
    '/flightAndMentenance/mentenanceView': {
      preLoaderRoute: typeof FlightAndMentenanceMentenanceViewImport
      parentRoute: typeof FlightAndMentenanceImport
    }
    '/flightAndMentenance/registFlight': {
      preLoaderRoute: typeof FlightAndMentenanceRegistFlightImport
      parentRoute: typeof FlightAndMentenanceImport
    }
    '/flightAndMentenance/registMentenance': {
      preLoaderRoute: typeof FlightAndMentenanceRegistMentenanceImport
      parentRoute: typeof FlightAndMentenanceImport
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/flightAndMentenance/': {
      preLoaderRoute: typeof FlightAndMentenanceIndexImport
      parentRoute: typeof FlightAndMentenanceImport
    }
    '/dashboard/invoices/$invoiceId': {
      preLoaderRoute: typeof DashboardInvoicesInvoiceIdImport
      parentRoute: typeof DashboardInvoicesImport
    }
    '/dashboard/users/user': {
      preLoaderRoute: typeof DashboardUsersUserImport
      parentRoute: typeof DashboardUsersImport
    }
    '/dashboard/invoices/': {
      preLoaderRoute: typeof DashboardInvoicesIndexImport
      parentRoute: typeof DashboardInvoicesImport
    }
    '/dashboard/users/': {
      preLoaderRoute: typeof DashboardUsersIndexImport
      parentRoute: typeof DashboardUsersImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  DashboardRoute.addChildren([
    DashboardInvoicesRoute.addChildren([
      DashboardInvoicesInvoiceIdRoute,
      DashboardInvoicesIndexRoute,
    ]),
    DashboardUsersRoute.addChildren([
      DashboardUsersUserRoute,
      DashboardUsersIndexRoute,
    ]),
    DashboardIndexRoute,
  ]),
  FlightAndMentenanceRoute.addChildren([
    FlightAndMentenanceFlightViewRoute,
    FlightAndMentenanceMentenanceViewRoute,
    FlightAndMentenanceRegistFlightRoute,
    FlightAndMentenanceRegistMentenanceRoute,
    FlightAndMentenanceIndexRoute,
  ]),
])

/* prettier-ignore-end */
